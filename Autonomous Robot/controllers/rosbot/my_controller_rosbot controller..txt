"""my_controller_rosbot controller."""

# You may need to import some classes of the controller module. Ex:
#  from controller import Robot, Motor, DistanceSensor
from controller import Robot, Motor
#from QLearning.HROSbot import * 

# create the Robot instance.
robot = Robot()



# get the time step of the current world.
timestep = int(robot.getBasicTimeStep())


# You should insert a getDevice-like function in order to get the
# instance of a device of the robot. Something like:
#  motor = robot.getDevice('motorname')
#  ds = robot.getDevice('dsname') 
#  ds.enable(timestep)

#rosbot = HROSbot(robot)
frw = robot.getDevice("fl_wheel_joint")
flw = robot.getDevice("fr_wheel_joint")
rrw = robot.getDevice("rl_wheel_joint")
rlw = robot.getDevice("rr_wheel_joint")


frw.setPosition(float('inf'))
flw.setPosition(float('inf'))
rrw.setPosition(float('inf'))
rlw.setPosition(float('inf'))

frw.setVelocity(0)
flw.setVelocity(0)
rrw.setVelocity(0)
rlw.setVelocity(0)


# Main loop:
# - perform simulation steps until Webots is stopping the controller
while robot.step(timestep) != -1:
    # Read the sensors:
    # Enter here functions to read sensor data, like:
    #  val = ds.getValue()
    frw.setVelocity(6.0)
    frw.setVelocity(6.0)
    rrw.setVelocity(6.0)
    rlw.setVelocity(6.0)
    # Process sensor data here.

    # Enter here functions to send actuator commands, like:
    #  motor.setPosition(10.0)
    pass

# Enter here exit cleanup code.
